/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Windows;

import com.Reproductor.VideoFrame;
import java.awt.Image;
import java.util.Base64;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.edisoncor.gui.panel.PanelImage;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author Carlos J
 */
public class Pelicula extends javax.swing.JFrame {

    private JSONObject pelicula = null;
    private JSONObject perfil = null;
    private JSONArray favoritos = null;
    private int idUsuario = -1;
    int tipo = -1;
    /**
     * Creates new form Pelicula
     */
    public Pelicula() {
        initComponents();
        ImageIcon img = new ImageIcon(getClass().getResource("/com/Imagenes/Play.png"));
        Icon icono = new ImageIcon(img.getImage().getScaledInstance(btnPlay.getWidth(),btnPlay.getHeight(),Image.SCALE_DEFAULT));
        btnPlay.setIcon(icono);
    }
    
    public Pelicula(JSONObject peli,JSONObject per,JSONArray favo,int idUsuario) {
        initComponents();
        this.pelicula=peli;
        this.perfil=per;
        this.favoritos=favo;
        this.idUsuario=idUsuario;
        
        interfaz();
        
        mostrarInformacion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel2 = new org.edisoncor.gui.panel.Panel();
        lblGenero = new org.edisoncor.gui.label.LabelMetric();
        pnlImg = new org.edisoncor.gui.panel.PanelImage();
        lblPelicula = new org.edisoncor.gui.label.LabelMetric();
        chkBoxFavoritos = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaSipnosis = new javax.swing.JTextArea();
        btnPlay = new org.edisoncor.gui.button.ButtonIcon();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pelicula");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        lblGenero.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGenero.setText("Genero : ");
        lblGenero.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblGenero.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N

        pnlImg.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout pnlImgLayout = new javax.swing.GroupLayout(pnlImg);
        pnlImg.setLayout(pnlImgLayout);
        pnlImgLayout.setHorizontalGroup(
            pnlImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );
        pnlImgLayout.setVerticalGroup(
            pnlImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );

        lblPelicula.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPelicula.setText("Pelicula");
        lblPelicula.setFont(new java.awt.Font("Consolas", 1, 40)); // NOI18N

        chkBoxFavoritos.setFont(new java.awt.Font("Consolas", 1, 30)); // NOI18N
        chkBoxFavoritos.setForeground(new java.awt.Color(255, 255, 255));
        chkBoxFavoritos.setText("Favorito");
        chkBoxFavoritos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkBoxFavoritosMouseClicked(evt);
            }
        });

        txtAreaSipnosis.setColumns(20);
        txtAreaSipnosis.setRows(5);
        jScrollPane1.setViewportView(txtAreaSipnosis);

        btnPlay.setBackground(new java.awt.Color(153, 0, 0));
        btnPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPlayMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPelicula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(pnlImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(chkBoxFavoritos)
                        .addGap(86, 86, 86)
                        .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 32, Short.MAX_VALUE))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(chkBoxFavoritos, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, 479, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkBoxFavoritosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkBoxFavoritosMouseClicked
        if (chkBoxFavoritos.isSelected()) {
            agregarFavoritos();
        }else{
            eliminarFavoritos();
        }
    }//GEN-LAST:event_chkBoxFavoritosMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        new Principal(perfil,idUsuario).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void btnPlayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlayMouseClicked
        String URLpeli = this.pelicula.get("ruta").toString();
        new VideoFrame(URLpeli).setVisible(true);
    }//GEN-LAST:event_btnPlayMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pelicula().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonIcon btnPlay;
    private javax.swing.JCheckBox chkBoxFavoritos;
    private javax.swing.JScrollPane jScrollPane1;
    private org.edisoncor.gui.label.LabelMetric lblGenero;
    private org.edisoncor.gui.label.LabelMetric lblPelicula;
    private org.edisoncor.gui.panel.Panel panel2;
    private org.edisoncor.gui.panel.PanelImage pnlImg;
    private javax.swing.JTextArea txtAreaSipnosis;
    // End of variables declaration//GEN-END:variables

    private void interfaz() {
        setLocationRelativeTo(null);
        this.setResizable(false);
        
        ImageIcon img = new ImageIcon(getClass().getResource("/com/Imagenes/Play.png"));
        Icon icono = new ImageIcon(img.getImage().getScaledInstance(btnPlay.getWidth(),btnPlay.getHeight(),Image.SCALE_DEFAULT));
        btnPlay.setIcon(icono);
    }

    private void mostrarInformacion() {
        lblPelicula.setText(pelicula.get("titulo").toString());
        lblGenero.setText(lblGenero.getText()+" "+pelicula.get("genero"));
        
        String cadenaImg = pelicula.get("poster").toString();
        byte [] byteImg = Base64.getDecoder().decode(cadenaImg);
        pnlImg.setIcon(new ImageIcon(byteImg));
        pnlImg.updateUI();
        
        txtAreaSipnosis.setText("");
        int j=0;
        String sipno =pelicula.get("descripcion").toString();
        String sub ="";
        for (int i = 0; i < sipno.length(); i++) {
            sub += sipno.charAt(i);
            if (sipno.charAt(i)==' ') {
                j++;
            }
            if(j==10){
                txtAreaSipnosis.append(sub);
                txtAreaSipnosis.append("\n");
                sub="";
                j=0;
            }
        }
        txtAreaSipnosis.append(sub);
        
        boolean siono = false;
        for (int i=0;i<favoritos.size();i++) {
            JSONObject peli = (JSONObject) favoritos.get(i);
            if (peli.get("id").toString().equals(pelicula.get("id").toString())) {
                siono=true;
                break;
            }
        }
        chkBoxFavoritos.setSelected(siono);
        
    }

    private void agregarFavoritos() {
        String url ="http://localhost:8080/NetFilmWS/recursos/servicio/agregarFavorito";
        try {
            Client client = ClientBuilder.newClient();
            WebTarget target = client.target(url);
            Response response = target
                    .queryParam("idUsuario",Integer.parseInt(perfil.get("usuario_id").toString()))
                    .queryParam("idPelicula",Integer.parseInt(pelicula.get("id").toString()))
                    .request().method("POST");

            String respuesta = response.readEntity(String.class);
            System.out.println(respuesta);
        } catch (Exception e) {
            System.out.println("Error al eliminar un perfil");
            System.out.println(e);
        }
    }

    private void eliminarFavoritos() {
        String url ="http://localhost:8080/NetFilmWS/recursos/servicio/eliminarFavorito";
        try {
            Client client = ClientBuilder.newClient();
            WebTarget target = client.target(url);
            Response response = target
                    .queryParam("idUsuario",Integer.parseInt(perfil.get("usuario_id").toString()))
                    .queryParam("idPelicula",Integer.parseInt(pelicula.get("id").toString()))
                    .request().method("POST");

            String respuesta = response.readEntity(String.class);
            System.out.println(respuesta);
        } catch (Exception e) {
            System.out.println("Error al eliminar un perfil");
            System.out.println(e);
        }
    }
}
