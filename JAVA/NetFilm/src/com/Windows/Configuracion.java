/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Windows;

import java.awt.Component;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URI;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Base64;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.Form;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author Carlos J
 */
public class Configuracion extends javax.swing.JFrame {

    private JSONObject perfil=null;
    private int idUsuario=-1;
    private Principal ventana = null;
    /**
     * Creates new form Configuracion
     */
    public Configuracion() {
        initComponents();
    }
    
    public Configuracion(Principal ven,Component componente,JSONObject perfil,int idUsuario) {
        initComponents();
        setLocationRelativeTo(componente);
        this.setResizable(false);
        
        this.perfil=perfil;
        this.idUsuario=idUsuario;
        this.ventana=ven;
        
        //Datos
        try {
            txtNombre.setText(perfil.get("nombre").toString());
            String cadenaImg = perfil.get("imagen").toString();
            byte [] byteImg = Base64.getDecoder().decode(cadenaImg);
            imgPerfil.setIcon(new ImageIcon(byteImg));
            imgPerfil.updateUI();
        
            JSONParser jParser = new JSONParser();
            JSONObject datos = (JSONObject) jParser.parse(perfil.get("datos").toString());
            
            spnEdad.setValue(Integer.parseInt(datos.get("edad").toString()));
            cmbBoxIdioma.setSelectedItem(datos.get("idioma").toString());
            
            ArrayList<String> imgs = new ArrayList<>();
            imgs.add("/com/Imagenes/Icono00.png");
            imgs.add("/com/Imagenes/Icono01.png");
            imgs.add("/com/Imagenes/Icono02.png");
            imgs.add("/com/Imagenes/Icono03.png");
            imgs.add("/com/Imagenes/Icono04.png");
            imgs.add("/com/Imagenes/Icono05.png");
            imgs.add("/com/Imagenes/Icono06.png");
            imgs.add("/com/Imagenes/Icono07.png");
            
            int i = 0;
            for(String img : imgs){
                File file = new File(getClass().getResource(img).getPath().replaceAll("%20"," "));
                Path path = Paths.get(file.getAbsolutePath());
                byte [] byteImg1 = Files.readAllBytes(path);
                String nvoImgBase64 = Base64.getEncoder().encodeToString(byteImg1);
                
                if(nvoImgBase64.equals(cadenaImg)){
                    comBoxIconos.setSelectedIndex(i);
                    break;
                }
                
                i++;
            }
            
        } catch (Exception e) {
            System.out.println("Error al leer los datos");
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new org.edisoncor.gui.panel.Panel();
        btnNuevo = new org.edisoncor.gui.button.ButtonRound();
        btnEditar = new org.edisoncor.gui.button.ButtonRound();
        btnOtro = new org.edisoncor.gui.button.ButtonRound();
        btnEliminar = new org.edisoncor.gui.button.ButtonRound();
        labelMetric2 = new org.edisoncor.gui.label.LabelMetric();
        labelMetric3 = new org.edisoncor.gui.label.LabelMetric();
        txtNombre = new org.edisoncor.gui.textField.TextFieldRoundIcon();
        imgPerfil = new org.edisoncor.gui.panel.PanelImage();
        comBoxIconos = new org.edisoncor.gui.comboBox.ComboBoxRound();
        cmbBoxIdioma = new org.edisoncor.gui.comboBox.ComboBoxRound();
        spnEdad = new javax.swing.JSpinner();
        labelMetric4 = new org.edisoncor.gui.label.LabelMetric();
        labelMetric5 = new org.edisoncor.gui.label.LabelMetric();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuracion");

        btnNuevo.setBackground(new java.awt.Color(204, 204, 0));
        btnNuevo.setText("Crear Perfil");
        btnNuevo.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btnNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNuevoMouseClicked(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(51, 51, 255));
        btnEditar.setText("Modificar");
        btnEditar.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarMouseClicked(evt);
            }
        });

        btnOtro.setBackground(new java.awt.Color(0, 153, 0));
        btnOtro.setText("Salir");
        btnOtro.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        btnOtro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOtroMouseClicked(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(153, 0, 0));
        btnEliminar.setText("Eliminar");
        btnEliminar.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });

        labelMetric2.setText("Configuracion");
        labelMetric2.setFont(new java.awt.Font("Consolas", 1, 20)); // NOI18N

        labelMetric3.setText("Nombre");
        labelMetric3.setFont(new java.awt.Font("Consolas", 1, 20)); // NOI18N

        txtNombre.setFont(new java.awt.Font("Dialog", 0, 30)); // NOI18N

        imgPerfil.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        imgPerfil.setPreferredSize(new java.awt.Dimension(140, 140));

        javax.swing.GroupLayout imgPerfilLayout = new javax.swing.GroupLayout(imgPerfil);
        imgPerfil.setLayout(imgPerfilLayout);
        imgPerfilLayout.setHorizontalGroup(
            imgPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 129, Short.MAX_VALUE)
        );
        imgPerfilLayout.setVerticalGroup(
            imgPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 134, Short.MAX_VALUE)
        );

        comBoxIconos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Icono 00", "Icono 01", "Icono 02", "Icono 03", "Icono 04", "Icono 05", "Icono 06", "Icono 07" }));
        comBoxIconos.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        comBoxIconos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxIconosActionPerformed(evt);
            }
        });

        cmbBoxIdioma.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Espa√±ol", "Ingles" }));
        cmbBoxIdioma.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N

        labelMetric4.setText("Idioma");
        labelMetric4.setFont(new java.awt.Font("Consolas", 1, 20)); // NOI18N

        labelMetric5.setText("Edad");
        labelMetric5.setFont(new java.awt.Font("Consolas", 1, 20)); // NOI18N

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1))
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelMetric3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(labelMetric4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(labelMetric5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(cmbBoxIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(spnEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
            .addComponent(jSeparator2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOtro, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(comBoxIconos, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelMetric2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelMetric2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imgPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(labelMetric3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMetric4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMetric5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbBoxIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spnEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(comBoxIconos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoMouseClicked
        int res = JOptionPane.showConfirmDialog(null, "Desea Crear Un Perfil Con Estos Datos", "Advertencia", JOptionPane.WARNING_MESSAGE);
        int num = optenerPerfiles().size();
        if (res==0 && num<5) {
            JSONObject json = new JSONObject();
            json.put("usuario",txtNombre.getText());
            json.put("contrasenia","NULL");

            String url = "http://localhost:8080/NetFilmWS/recursos/servicio/ingresarPerfil";
            Client client = ClientBuilder.newClient();
            WebTarget target = client.target(url);

            Form form = new Form();
            form.param("nuevo",json.toJSONString());
            form.param("idUsuario",""+this.idUsuario);

            Response response = target.request(MediaType.TEXT_PLAIN).put(Entity.form(form));
            boolean siono1 = Boolean.parseBoolean(response.toString());
            boolean siono2 = registrarDatos();
            if(!siono1 && siono2){
                JOptionPane.showMessageDialog(null, "Nuevo Perfil Registrado", "Notificacion", JOptionPane.INFORMATION_MESSAGE);
                new Perfiles(idUsuario).setVisible(true);
                this.dispose();
                this.ventana.dispose();
            }else{
                JOptionPane.showMessageDialog(null,"No se puede Registrar nuevo Perfil\nIntente en otro momento","Error",JOptionPane.ERROR_MESSAGE);               
            }
        }else{
            if(res==0){
                JOptionPane.showMessageDialog(null, "No Puedes Tener Mas de 5 Perfiles", "Notificacion", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnNuevoMouseClicked

    private void btnEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseClicked
        //Datos
        String nvoNom = txtNombre.getText();
        String nvoIdioma = cmbBoxIdioma.getSelectedItem().toString();
        int nvoEdad = Integer.parseInt(spnEdad.getValue().toString());
        String nvoImagen = "";
        String url ="http://localhost:8080/NetFilmWS/recursos/servicio/actualizarDatosUsuario";
        
        switch (comBoxIconos.getSelectedIndex()) {
            case 0:
                    nvoImagen="/com/Imagenes/Icono00.png";
                break;
            case 1:
                    nvoImagen="/com/Imagenes/Icono01.png";
                break;
            case 2:
                    nvoImagen="/com/Imagenes/Icono02.png";
                break;
            case 3:
                    nvoImagen="/com/Imagenes/Icono03.png";
                break;
            case 4:
                    nvoImagen="/com/Imagenes/Icono04.png";
                break;
            case 5:
                    nvoImagen="/com/Imagenes/Icono05.png";
                break;
            case 6:
                    nvoImagen="/com/Imagenes/Icono06.png";
                break;
            case 7:
                    nvoImagen="/com/Imagenes/Icono07.png";
                break;
        }
        
        try {
            File file = new File(getClass().getResource(nvoImagen).getPath().replaceAll("%20"," "));
            Path path = Paths.get(file.getAbsolutePath());
            byte [] byteImg = Files.readAllBytes(path);
            String nvoImgBase64 = Base64.getEncoder().encodeToString(byteImg);
            
            JSONObject nvoDatos = new JSONObject();
            nvoDatos.put("idioma",nvoIdioma);
            nvoDatos.put("edad",nvoEdad);
            
            JSONObject jsonNvoDatos = new JSONObject();
            jsonNvoDatos.put("usuario_id",Integer.parseInt(perfil.get("usuario_id").toString()));
            jsonNvoDatos.put("nombre",nvoNom);
            jsonNvoDatos.put("datos",nvoDatos.toJSONString());
            jsonNvoDatos.put("imagen",nvoImgBase64);
        
            Client client = ClientBuilder.newClient();
            WebTarget target = client.target(url);
            Form form = new Form();
            form.param("datos",jsonNvoDatos.toJSONString());
            Response response = target.request(MediaType.TEXT_PLAIN).put(Entity.form(form));
            System.out.println(response);
            
            JOptionPane.showMessageDialog(null, "Datos Actualizados", "Notificacion", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            System.out.println("Error al actualizar datos");
            System.out.println(e);
            JOptionPane.showMessageDialog(null,"No se puede Actulizar los Datos\nIntente en otro Momento","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarMouseClicked

    private void btnOtroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOtroMouseClicked
        new Perfiles(idUsuario).setVisible(true);
        this.dispose();
        this.ventana.dispose();
    }//GEN-LAST:event_btnOtroMouseClicked

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        int res = JOptionPane.showConfirmDialog(null, "Seguro que Desea Eliminar el Perfil", "Advertencia", JOptionPane.WARNING_MESSAGE);
        int num = optenerPerfiles().size();
        if (res==0 && num>1) {
            String url ="http://localhost:8080/NetFilmWS/recursos/servicio/eliminar";
            try {
                Client client = ClientBuilder.newClient();
                WebTarget target = client.target(url);
                Response response = target.queryParam("id",Integer.parseInt(perfil.get("usuario_id").toString())).request().method("POST");

                String respuesta = response.readEntity(String.class);
                System.out.println(respuesta);

                if(Boolean.parseBoolean(respuesta)){
                    JOptionPane.showMessageDialog(null, "Perfil Elimibado", "Notificacion", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                System.out.println("Error al eliminar un perfil");
                System.out.println(e);
                JOptionPane.showMessageDialog(null,"No se puede Eliminar el perfil\nIntente en otro Momento","Error",JOptionPane.ERROR_MESSAGE);
            }
            new Login().setVisible(true);
            this.dispose();
            this.ventana.dispose();
        }else{
            if(res==0){
                JOptionPane.showMessageDialog(null, "No Puedes Tener Menos de 1 Perfil", "Notificacion", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void comBoxIconosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxIconosActionPerformed
        ImageIcon img =null;
        Icon icono = null;
        
        switch (comBoxIconos.getSelectedIndex()) {
            case 0:
                    img = new ImageIcon(getClass().getResource("/com/Imagenes/Icono00.png"));
                    icono = new ImageIcon(img.getImage().getScaledInstance(imgPerfil.getWidth(),imgPerfil.getHeight(),Image.SCALE_DEFAULT));
                    imgPerfil.setIcon(icono);
                    imgPerfil.updateUI();
                break;
            case 1:
                    img = new ImageIcon(getClass().getResource("/com/Imagenes/Icono01.png"));
                    icono = new ImageIcon(img.getImage().getScaledInstance(imgPerfil.getWidth(),imgPerfil.getHeight(),Image.SCALE_DEFAULT));
                    imgPerfil.setIcon(icono);
                    imgPerfil.updateUI();
                break;
            case 2:
                    img = new ImageIcon(getClass().getResource("/com/Imagenes/Icono02.png"));
                    icono = new ImageIcon(img.getImage().getScaledInstance(imgPerfil.getWidth(),imgPerfil.getHeight(),Image.SCALE_DEFAULT));
                    imgPerfil.setIcon(icono);
                    imgPerfil.updateUI();
                break;
            case 3:
                    img = new ImageIcon(getClass().getResource("/com/Imagenes/Icono03.png"));
                    icono = new ImageIcon(img.getImage().getScaledInstance(imgPerfil.getWidth(),imgPerfil.getHeight(),Image.SCALE_DEFAULT));
                    imgPerfil.setIcon(icono);
                    imgPerfil.updateUI();
                break;
            case 4:
                    img = new ImageIcon(getClass().getResource("/com/Imagenes/Icono04.png"));
                    icono = new ImageIcon(img.getImage().getScaledInstance(imgPerfil.getWidth(),imgPerfil.getHeight(),Image.SCALE_DEFAULT));
                    imgPerfil.setIcon(icono);
                    imgPerfil.updateUI();
                break;
            case 5:
                    img = new ImageIcon(getClass().getResource("/com/Imagenes/Icono05.png"));
                    icono = new ImageIcon(img.getImage().getScaledInstance(imgPerfil.getWidth(),imgPerfil.getHeight(),Image.SCALE_DEFAULT));
                    imgPerfil.setIcon(icono);
                    imgPerfil.updateUI();
                break;
            case 6:
                    img = new ImageIcon(getClass().getResource("/com/Imagenes/Icono06.png"));
                    icono = new ImageIcon(img.getImage().getScaledInstance(imgPerfil.getWidth(),imgPerfil.getHeight(),Image.SCALE_DEFAULT));
                    imgPerfil.setIcon(icono);
                    imgPerfil.updateUI();
                break;
            case 7:
                    img = new ImageIcon(getClass().getResource("/com/Imagenes/Icono07.png"));
                    icono = new ImageIcon(img.getImage().getScaledInstance(imgPerfil.getWidth(),imgPerfil.getHeight(),Image.SCALE_DEFAULT));
                    imgPerfil.setIcon(icono);
                    imgPerfil.updateUI();
                break;
        }
    }//GEN-LAST:event_comBoxIconosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Configuracion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonRound btnEditar;
    private org.edisoncor.gui.button.ButtonRound btnEliminar;
    private org.edisoncor.gui.button.ButtonRound btnNuevo;
    private org.edisoncor.gui.button.ButtonRound btnOtro;
    private org.edisoncor.gui.comboBox.ComboBoxRound cmbBoxIdioma;
    private org.edisoncor.gui.comboBox.ComboBoxRound comBoxIconos;
    private org.edisoncor.gui.panel.PanelImage imgPerfil;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private org.edisoncor.gui.label.LabelMetric labelMetric2;
    private org.edisoncor.gui.label.LabelMetric labelMetric3;
    private org.edisoncor.gui.label.LabelMetric labelMetric4;
    private org.edisoncor.gui.label.LabelMetric labelMetric5;
    private org.edisoncor.gui.panel.Panel panel1;
    private javax.swing.JSpinner spnEdad;
    private org.edisoncor.gui.textField.TextFieldRoundIcon txtNombre;
    // End of variables declaration//GEN-END:variables
    
    private boolean registrarDatos() {
        String url = "http://localhost:8080/NetFilmWS/recursos/servicio/ingresarDatosUsuario";
        String nvoNom = txtNombre.getText();
        String nvoIdioma = cmbBoxIdioma.getSelectedItem().toString();
        int nvoEdad = Integer.parseInt(spnEdad.getValue().toString());
        
        try {
            JSONObject jsonUsuario = extraerUsuario();
            String nvoImagen = "";
            switch (comBoxIconos.getSelectedIndex()) {
                case 0:
                        nvoImagen="/com/Imagenes/Icono00.png";
                    break;
                case 1:
                        nvoImagen="/com/Imagenes/Icono01.png";
                    break;
                case 2:
                        nvoImagen="/com/Imagenes/Icono02.png";
                    break;
                case 3:
                        nvoImagen="/com/Imagenes/Icono03.png";
                    break;
                case 4:
                        nvoImagen="/com/Imagenes/Icono04.png";
                    break;
                case 5:
                        nvoImagen="/com/Imagenes/Icono05.png";
                    break;
                case 6:
                        nvoImagen="/com/Imagenes/Icono06.png";
                    break;
                case 7:
                        nvoImagen="/com/Imagenes/Icono07.png";
                    break;
            }
        
            File file = new File(getClass().getResource(nvoImagen).getPath().replaceAll("%20"," "));
            Path path = Paths.get(file.getAbsolutePath());
            byte [] byteImg = Files.readAllBytes(path);
            String imgBase64 = Base64.getEncoder().encodeToString(byteImg);
            System.out.println(imgBase64);

            JSONObject datos = new JSONObject();
            datos.put("edad",nvoEdad);
            datos.put("idioma",nvoIdioma);
            
            JSONObject jsonDatos = new JSONObject();
            jsonDatos.put("nombre",nvoNom);
            jsonDatos.put("datos",datos.toJSONString());
            jsonDatos.put("imagen",imgBase64);
            
            Client client = ClientBuilder.newClient();
            WebTarget target = client.target(url);
        
            Form form = new Form();
            form.param("usuario",jsonUsuario.toJSONString());
            form.param("datos",jsonDatos.toJSONString());
            Response response = target.request(MediaType.TEXT_PLAIN).put(Entity.form(form));
            
            System.out.println(response);
            
        } catch (Exception e) {
            System.out.println("Error al registra datos");
            System.out.println(e);
            return false;
        }
        return true;
    }
    
    private JSONObject extraerUsuario() {
        String url = "http://localhost:8080/NetFilmWS/recursos/servicio/usuario";
        JSONObject json = new JSONObject();
        HttpURLConnection connection = null;
        try {
            //Conectar
            UriBuilder builder = UriBuilder.fromPath(url).queryParam("usr",txtNombre.getText());
            URI uri = builder.build();
            
            connection = (HttpURLConnection) uri.toURL().openConnection();
            connection.setRequestMethod("GET");
            connection.setUseCaches(false);
            connection.setDoInput(true);
            connection.setDoOutput(true);
            
            // Get Response	
            InputStream is = connection.getInputStream();
            BufferedReader br = new BufferedReader(new InputStreamReader(is));
            String line;
            String respuesta = "";
            while( (line=br.readLine()) != null ) {
                respuesta += line;
            }
            
            // Disconnect
            br.close();
            connection.disconnect();
            
            System.out.println(respuesta);
            
            if(!respuesta.isEmpty()) {
                JSONParser parser = new JSONParser();
                json =(JSONObject)parser.parse(respuesta);
            }
        } catch (Exception e) {
            System.out.println("Error al extraer el usuario");
            System.out.println(e);
        }
        return json;
    }
    
    private JSONArray optenerPerfiles() {
        JSONArray lista = new JSONArray();
        String url ="http://localhost:8080/NetFilmWS/recursos/servicio/perfilesUsuario";
        try {
            Client client = ClientBuilder.newClient();
            WebTarget target = client.target(url);
            Response response = target.queryParam("id",this.idUsuario).request().method("POST");
            
            String respuesta = response.readEntity(String.class);
            System.out.println(respuesta);

            JSONParser jParser = new JSONParser();
            lista = (JSONArray) jParser.parse(respuesta);
            
        } catch (Exception e) {
            System.out.println("Error al obtener los perfiles");
            System.out.println(e);
        }
        
        return lista;
    }
}
