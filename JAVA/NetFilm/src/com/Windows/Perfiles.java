/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Windows;

import com.sun.glass.events.KeyEvent;
import java.util.Base64;
import javax.swing.ImageIcon;
import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.Response;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author Carlos J
 */
public class Perfiles extends javax.swing.JFrame {

    private JSONArray perfiles = null;
    private int idUsuario = -1;
    private boolean disponible[] = new boolean[5];
    /**
     * Creates new form Perfiles
     */
    public Perfiles() {
        initComponents();
        System.out.println(imgPerfil01.getBounds());
    }
    
    public Perfiles(int idUsuario) {
        initComponents();
        setLocationRelativeTo(null);
        this.setResizable(false);
        
        
        this.idUsuario=idUsuario;
        System.out.println("Usuario: "+this.idUsuario);
      
        
        this.perfiles = optenerPerfiles();
        
        iconos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel2 = new org.edisoncor.gui.panel.Panel();
        imgPerfil01 = new org.edisoncor.gui.panel.PanelImage();
        nomPerfil01 = new org.edisoncor.gui.label.LabelMetric();
        imgPerfil02 = new org.edisoncor.gui.panel.PanelImage();
        nomPerfil02 = new org.edisoncor.gui.label.LabelMetric();
        imgPerfil03 = new org.edisoncor.gui.panel.PanelImage();
        nomPerfil03 = new org.edisoncor.gui.label.LabelMetric();
        imgPerfil04 = new org.edisoncor.gui.panel.PanelImage();
        nomPerfil04 = new org.edisoncor.gui.label.LabelMetric();
        nomPerfil05 = new org.edisoncor.gui.label.LabelMetric();
        imgPerfil05 = new org.edisoncor.gui.panel.PanelImage();
        labelMetric2 = new org.edisoncor.gui.label.LabelMetric();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Perfil");

        panel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/Imagenes/Fondo02.jpg"))); // NOI18N

        imgPerfil01.setPreferredSize(new java.awt.Dimension(140, 140));
        imgPerfil01.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imgPerfil01MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout imgPerfil01Layout = new javax.swing.GroupLayout(imgPerfil01);
        imgPerfil01.setLayout(imgPerfil01Layout);
        imgPerfil01Layout.setHorizontalGroup(
            imgPerfil01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );
        imgPerfil01Layout.setVerticalGroup(
            imgPerfil01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );

        nomPerfil01.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomPerfil01.setText("Usuario01");
        nomPerfil01.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N

        imgPerfil02.setPreferredSize(new java.awt.Dimension(140, 140));
        imgPerfil02.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imgPerfil02MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout imgPerfil02Layout = new javax.swing.GroupLayout(imgPerfil02);
        imgPerfil02.setLayout(imgPerfil02Layout);
        imgPerfil02Layout.setHorizontalGroup(
            imgPerfil02Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );
        imgPerfil02Layout.setVerticalGroup(
            imgPerfil02Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );

        nomPerfil02.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomPerfil02.setText("Usuario02");
        nomPerfil02.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N

        imgPerfil03.setPreferredSize(new java.awt.Dimension(140, 140));
        imgPerfil03.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imgPerfil03MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout imgPerfil03Layout = new javax.swing.GroupLayout(imgPerfil03);
        imgPerfil03.setLayout(imgPerfil03Layout);
        imgPerfil03Layout.setHorizontalGroup(
            imgPerfil03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );
        imgPerfil03Layout.setVerticalGroup(
            imgPerfil03Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );

        nomPerfil03.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomPerfil03.setText("Usuario03");
        nomPerfil03.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N

        imgPerfil04.setPreferredSize(new java.awt.Dimension(140, 140));
        imgPerfil04.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imgPerfil04MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout imgPerfil04Layout = new javax.swing.GroupLayout(imgPerfil04);
        imgPerfil04.setLayout(imgPerfil04Layout);
        imgPerfil04Layout.setHorizontalGroup(
            imgPerfil04Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );
        imgPerfil04Layout.setVerticalGroup(
            imgPerfil04Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );

        nomPerfil04.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomPerfil04.setText("Usuario04");
        nomPerfil04.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N

        nomPerfil05.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomPerfil05.setText("Usuario05");
        nomPerfil05.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N

        imgPerfil05.setPreferredSize(new java.awt.Dimension(140, 140));
        imgPerfil05.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imgPerfil05MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout imgPerfil05Layout = new javax.swing.GroupLayout(imgPerfil05);
        imgPerfil05.setLayout(imgPerfil05Layout);
        imgPerfil05Layout.setHorizontalGroup(
            imgPerfil05Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );
        imgPerfil05Layout.setVerticalGroup(
            imgPerfil05Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );

        labelMetric2.setText("Perfiles");
        labelMetric2.setFont(new java.awt.Font("Consolas", 1, 48)); // NOI18N

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imgPerfil05, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(nomPerfil05, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)))
                .addGap(35, 35, 35)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imgPerfil04, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(nomPerfil04, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)))
                .addGap(32, 32, 32)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imgPerfil01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(nomPerfil01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)))
                .addGap(32, 32, 32)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imgPerfil02, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(nomPerfil02, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)))
                .addGap(27, 27, 27)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imgPerfil03, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(nomPerfil03, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelMetric2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(324, 324, 324))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(labelMetric2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(imgPerfil05, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomPerfil05, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(imgPerfil04, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomPerfil04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(imgPerfil03, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomPerfil03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(imgPerfil02, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomPerfil02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(imgPerfil01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nomPerfil01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(84, 84, 84))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void imgPerfil01MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgPerfil01MouseClicked
        if(evt.getClickCount() >= 2 && disponible[0]==true) {
            for (int i = 0; i < perfiles.size(); i++) {
                JSONObject json = (JSONObject)perfiles.get(i);
                if (json.get("nombre").toString().equals(nomPerfil01.getText())) {
                    new Principal(json,this.idUsuario).setVisible(true);
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_imgPerfil01MouseClicked

    private void imgPerfil02MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgPerfil02MouseClicked
        if(evt.getClickCount() >= 2 && disponible[1]==true) {
            for (int i = 0; i < perfiles.size(); i++) {
                JSONObject json = (JSONObject)perfiles.get(i);
                if (json.get("nombre").toString().equals(nomPerfil02.getText())) {
                    new Principal(json,this.idUsuario).setVisible(true);
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_imgPerfil02MouseClicked

    private void imgPerfil03MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgPerfil03MouseClicked
        if(evt.getClickCount() >= 2 && disponible[2]==true) {
            for (int i = 0; i < perfiles.size(); i++) {
                JSONObject json = (JSONObject)perfiles.get(i);
                if (json.get("nombre").toString().equals(nomPerfil03.getText())) {
                    new Principal(json,this.idUsuario).setVisible(true);
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_imgPerfil03MouseClicked

    private void imgPerfil04MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgPerfil04MouseClicked
        if(evt.getClickCount() >= 2 && disponible[3]==true) {
            for (int i = 0; i < perfiles.size(); i++) {
                JSONObject json = (JSONObject)perfiles.get(i);
                if (json.get("nombre").toString().equals(nomPerfil04.getText())) {
                    new Principal(json,this.idUsuario).setVisible(true);
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_imgPerfil04MouseClicked

    private void imgPerfil05MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgPerfil05MouseClicked
        if(evt.getClickCount() >= 2 && disponible[4]==true) {
            for (int i = 0; i < perfiles.size(); i++) {
                JSONObject json = (JSONObject)perfiles.get(i);
                if (json.get("nombre").toString().equals(nomPerfil05.getText())) {
                    new Principal(json,this.idUsuario).setVisible(true);
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_imgPerfil05MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Perfiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Perfiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Perfiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Perfiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Perfiles().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.panel.PanelImage imgPerfil01;
    private org.edisoncor.gui.panel.PanelImage imgPerfil02;
    private org.edisoncor.gui.panel.PanelImage imgPerfil03;
    private org.edisoncor.gui.panel.PanelImage imgPerfil04;
    private org.edisoncor.gui.panel.PanelImage imgPerfil05;
    private org.edisoncor.gui.label.LabelMetric labelMetric2;
    private org.edisoncor.gui.label.LabelMetric nomPerfil01;
    private org.edisoncor.gui.label.LabelMetric nomPerfil02;
    private org.edisoncor.gui.label.LabelMetric nomPerfil03;
    private org.edisoncor.gui.label.LabelMetric nomPerfil04;
    private org.edisoncor.gui.label.LabelMetric nomPerfil05;
    private org.edisoncor.gui.panel.Panel panel2;
    // End of variables declaration//GEN-END:variables

    private JSONArray optenerPerfiles() {
        JSONArray lista = new JSONArray();
        String url ="http://localhost:8080/NetFilmWS/recursos/servicio/perfilesUsuario";
        try {
            Client client = ClientBuilder.newClient();
            WebTarget target = client.target(url);
            Response response = target.queryParam("id",this.idUsuario).request().method("POST");
            
            String respuesta = response.readEntity(String.class);
            System.out.println(respuesta);

            JSONParser jParser = new JSONParser();
            lista = (JSONArray) jParser.parse(respuesta);
            
        } catch (Exception e) {
            System.out.println("Error al obtener los perfiles");
            System.out.println(e);
        }
        
        return lista;
    }

    private void iconos() {
        System.out.println("Numero de perfiles : "+this.perfiles.size());
        switch (this.perfiles.size()) {
            case 1:
                    unPerfil();
                break;
            case 2:
                    dosPerfiles();
                break;
            case 3:
                    tresPerfiles();
                break;
            case 4:
                    cuatroPerfiles();
                break;
            case 5:
                    cincoPerfiles();
                break;
        }
    }

    private void unPerfil() {
        //Info Perfil1
        JSONObject perfil1 =(JSONObject)perfiles.get(0);
        String cadenaImg = perfil1.get("imagen").toString();
        byte [] byteImg = Base64.getDecoder().decode(cadenaImg);
        imgPerfil01.setIcon(new ImageIcon(byteImg));
        imgPerfil01.updateUI();
        nomPerfil01.setText(perfil1.get("nombre").toString());
        
        //Ocultar los otros perfiles
        nomPerfil02.setText("");
        nomPerfil03.setText("");
        nomPerfil04.setText("");
        nomPerfil05.setText("");
        
        disponible[0]=true;
        disponible[1]=false;
        disponible[2]=false;
        disponible[3]=false;
        disponible[4]=false;
    }

    private void dosPerfiles() {
       //Info Perfil1
        JSONObject perfil1 =(JSONObject)perfiles.get(0);
        String cadenaImg1 = perfil1.get("imagen").toString();
        byte [] byteImg1 = Base64.getDecoder().decode(cadenaImg1);
        imgPerfil04.setIcon(new ImageIcon(byteImg1));
        imgPerfil04.updateUI();
        nomPerfil04.setText(perfil1.get("nombre").toString());
        
        
        JSONObject perfil2 =(JSONObject)perfiles.get(1);
        String cadenaImg2 = perfil2.get("imagen").toString();
        byte [] byteImg2 = Base64.getDecoder().decode(cadenaImg2);
        imgPerfil02.setIcon(new ImageIcon(byteImg2));
        imgPerfil02.updateUI();
        nomPerfil02.setText(perfil2.get("nombre").toString());
        
        //Ocultar los otros perfiles
        nomPerfil01.setText("");
        nomPerfil03.setText("");
        nomPerfil05.setText("");
        
        disponible[0]=false;
        disponible[1]=true;
        disponible[2]=false;
        disponible[3]=true;
        disponible[4]=false;
    }

    private void tresPerfiles() {
        //Info Perfil1
        JSONObject perfil1 =(JSONObject)perfiles.get(0);
        String cadenaImg1 = perfil1.get("imagen").toString();
        byte [] byteImg1 = Base64.getDecoder().decode(cadenaImg1);
        imgPerfil05.setIcon(new ImageIcon(byteImg1));
        imgPerfil05.updateUI();
        nomPerfil05.setText(perfil1.get("nombre").toString());

        JSONObject perfil2 =(JSONObject)perfiles.get(1);
        String cadenaImg2 = perfil2.get("imagen").toString();
        byte [] byteImg2 = Base64.getDecoder().decode(cadenaImg2);
        imgPerfil01.setIcon(new ImageIcon(byteImg2));
        imgPerfil01.updateUI();
        nomPerfil01.setText(perfil2.get("nombre").toString());

        
        JSONObject perfil3 =(JSONObject)perfiles.get(2);
        String cadenaImg3 = perfil3.get("imagen").toString();
        byte [] byteImg3 = Base64.getDecoder().decode(cadenaImg3);
        imgPerfil03.setIcon(new ImageIcon(byteImg3));
        imgPerfil03.updateUI();
        nomPerfil03.setText(perfil3.get("nombre").toString());
        
        //Ocultar los otros perfiles
        nomPerfil02.setText("");
        nomPerfil04.setText("");
        
        disponible[0]=true;
        disponible[1]=false;
        disponible[2]=true;
        disponible[3]=false;
        disponible[4]=true;
    }

    private void cuatroPerfiles() {
        //Info Perfil1
        JSONObject perfil1 =(JSONObject)perfiles.get(0);
        String cadenaImg1 = perfil1.get("imagen").toString();
        byte [] byteImg1 = Base64.getDecoder().decode(cadenaImg1);
        imgPerfil05.setIcon(new ImageIcon(byteImg1));
        imgPerfil05.updateUI();
        nomPerfil05.setText(perfil1.get("nombre").toString());

        JSONObject perfil2 =(JSONObject)perfiles.get(1);
        String cadenaImg2 = perfil2.get("imagen").toString();
        byte [] byteImg2 = Base64.getDecoder().decode(cadenaImg2);
        imgPerfil04.setIcon(new ImageIcon(byteImg2));
        imgPerfil04.updateUI();
        nomPerfil04.setText(perfil2.get("nombre").toString());

        JSONObject perfil3 =(JSONObject)perfiles.get(2);
        String cadenaImg3 = perfil3.get("imagen").toString();
        byte [] byteImg3 = Base64.getDecoder().decode(cadenaImg3);
        imgPerfil02.setIcon(new ImageIcon(byteImg3));
        imgPerfil02.updateUI();
        nomPerfil02.setText(perfil3.get("nombre").toString());
        
        
        JSONObject perfil4 =(JSONObject)perfiles.get(3);
        String cadenaImg4 = perfil4.get("imagen").toString();
        byte [] byteImg4 = Base64.getDecoder().decode(cadenaImg4);
        imgPerfil03.setIcon(new ImageIcon(byteImg4));
        imgPerfil03.updateUI();
        nomPerfil03.setText(perfil4.get("nombre").toString());
        
        //Ocultar los otros perfiles
        nomPerfil01.setText("");
        
        disponible[0]=false;
        disponible[1]=true;
        disponible[2]=true;
        disponible[3]=true;
        disponible[4]=true;
    }

    private void cincoPerfiles() {
        //Info Perfil1
        JSONObject perfil1 =(JSONObject)perfiles.get(0);
        String cadenaImg1 = perfil1.get("imagen").toString();
        byte [] byteImg1 = Base64.getDecoder().decode(cadenaImg1);
        imgPerfil05.setIcon(new ImageIcon(byteImg1));
        imgPerfil05.updateUI();
        nomPerfil05.setText(perfil1.get("nombre").toString());

        JSONObject perfil2 =(JSONObject)perfiles.get(1);
        String cadenaImg2 = perfil2.get("imagen").toString();
        byte [] byteImg2 = Base64.getDecoder().decode(cadenaImg2);
        imgPerfil04.setIcon(new ImageIcon(byteImg2));
        imgPerfil04.updateUI();
        nomPerfil04.setText(perfil2.get("nombre").toString());

        JSONObject perfil3 =(JSONObject)perfiles.get(2);
        String cadenaImg3 = perfil3.get("imagen").toString();
        byte [] byteImg3 = Base64.getDecoder().decode(cadenaImg3);
        imgPerfil01.setIcon(new ImageIcon(byteImg3));
        imgPerfil01.updateUI();
        nomPerfil01.setText(perfil3.get("nombre").toString());
        
        JSONObject perfil4 =(JSONObject)perfiles.get(3);
        String cadenaImg4 = perfil4.get("imagen").toString();
        byte [] byteImg4 = Base64.getDecoder().decode(cadenaImg4);
        imgPerfil02.setIcon(new ImageIcon(byteImg4));
        imgPerfil02.updateUI();
        nomPerfil02.setText(perfil4.get("nombre").toString());
        
        JSONObject perfil5 =(JSONObject)perfiles.get(4);
        String cadenaImg5 = perfil5.get("imagen").toString();
        byte [] byteImg5 = Base64.getDecoder().decode(cadenaImg5);
        imgPerfil03.setIcon(new ImageIcon(byteImg5));
        imgPerfil03.updateUI();
        nomPerfil03.setText(perfil5.get("nombre").toString());
        
        disponible[0]=true;
        disponible[1]=true;
        disponible[2]=true;
        disponible[3]=true;
        disponible[4]=true;
    }
    
}
